name: Unit Testing

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check-changes:
    name: Check Changes in PR
    runs-on: ubuntu-latest
    outputs:
      contracts-changed: ${{ steps.changes.outputs.contracts }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            contracts:
              - 'packages/contracts/**'

  run-contracts-tests:
    name: SC Test ${{ matrix.label }}
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.contracts-changed == 'true'
    env:
      NODE_OPTIONS: "--max-old-space-size=8192"
    strategy:
      fail-fast: false
      matrix:
        include:
          - shard: shard1000
            label: NodeManagement
          - shard: shard1001
            label: NodeManagementV3
          - shard: shard100
            label: StargateDel Deployment
          - shard: shard101
            label: StargateDel Upgradeability
          - shard: shard102
            label: StargateDel Settings
          - shard: shard103
            label: StargateDel Delegation
          - shard: shard104
            label: StargateDel Rewards
          - shard: shard105
            label: StargateDel NodeManagement
          - shard: shard106
            label: StargateDel Lost Rewards
          - shard: shard1
            label: StargateNFT Deployment
          - shard: shard2
            label: StargateNFT Pausability
          - shard: shard3
            label: StargateNFT Upgradeability
          - shard: shard4
            label: StargateNFT Settings
          - shard: shard5
            label: StargateNFT Levels
          - shard: shard6
            label: StargateNFT Compatibility
          - shard: shard7
            label: StargateNFT Staking
          - shard: shard8
            label: StargateNFT Stake and Delegate
          - shard: shard9
            label: StargateNFT Migration
          - shard: shard10
            label: StargateNFT Whitelisted Migration
          - shard: shard11
            label: StargateNFT Unstaking
          - shard: shard12
            label: StargateNFT Base Rewards
          - shard: shard13
            label: StargateNFT Rewards Auto Claiming
          - shard: shard10000
            label: Reentrancy Attacks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node v20
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Solidity compilers
        uses: actions/cache@v3
        with:
          path: ~/.cache/hardhat-nodejs
          key: ${{ runner.os }}-solc-${{ hashFiles('./packages/contracts/hardhat.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-solc-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set shard environment variable
        run: echo "SHARD=${{ matrix.shard }}" >> $GITHUB_ENV

      - name: Run tests and coverage
        run: yarn test:coverage:solidity

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.shard }}
          path: packages/contracts/coverage/coverage-final.json

  upload-merged-coverage:
    name: Upload Merged Coverage Reports
    runs-on: ubuntu-latest
    needs: run-contracts-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node v20
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: packages/contracts/coverage-shards

      - name: Debug downloaded artifacts
        run: |
          ls -la packages/contracts/coverage-shards

      - name: Merge coverage reports
        working-directory: packages/contracts
        run: npx ts-node scripts/helpers/merge-coverage.ts

      - name: Create .nyc_output directory
        run: mkdir -p packages/contracts/.nyc_output

      - name: Generate final coverage report
        working-directory: packages/contracts
        run: yarn coverage:report

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: packages/contracts/coverage/
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  run-slither:
    name: Slither Analysis
    uses: vechain/github-actions/.github/workflows/slither.yaml@fix/slither-edge-cases
    needs: check-changes
    if: needs.check-changes.outputs.contracts-changed == 'true'
    with:
      target: "packages/contracts/"
      solc-version: "0.8.20"
      fail-on: none
      slither-args: '--filter-paths "(openzeppelin|mocks|interfaces|deprecated|templates|NodeManagement/NodeManagementV1.sol|NodeManagement/NodeManagementV2.sol)" --exclude-informational --exclude-optimization --checklist --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/'